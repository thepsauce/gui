Button:
	.background = color 0x60609f
	.away = color red
	.shadow = color red
	.outline = color 0x5b1200
	.text = color green
	.press = color brown
	.hover = color yellow
	.is_hovered = bool false
	.is_pressed = bool false
	.has_spawned = bool false
	.circular = bool true
	.font = font default

	.init = function {
		print(string "Init\n")
		;;; TODO: implement this in the parser
		insert(text, string "hello")
		insert(array, string "hey", string "bye")

		print(string "array: ")
		for i to length(array) {
			print(get(array, i))
		}
		print(string "\n")

		print(string "text: ")
		for i from 0 to length(text) {
			print(get(text, i))
		}
		print(string "\n")

		for i in array {
			print(i)
		}
		;;;
	}
	.draw = function {
		local c = color 0
		if is_pressed {
			if is_hovered {
				c = press
			} else {
				c = away
			}
		} else {
			if is_hovered {
				c = hover
			} else {
				c = background
			}
		}
		if has_spawned {
			c = rand(0, 1000000)
		}
		SetDrawColor(c)
		FillRect(GetRect(this))
	}
	.event = function object Event e {
		if equals(GetType(e), const EVENT_MOUSEMOVE) {
			if Contains(GetRect(this), GetPos(e)) {
				is_hovered = bool true
			} else {
				is_hovered = bool false
			}
		} else if equals(GetType(e), const EVENT_BUTTONDOWN) {
			if equals(GetButton(e), const BUTTON_LEFT) {
				; testing property functions ;
				SetProperty(this, "is_pressed", GetProperty(this, "is_hovered"))
				;is_pressed = is_hovered;
			}
		} else if equals(GetType(e), const EVENT_BUTTONUP) {
			if and(is_pressed, is_hovered, not(has_spawned)) {
				local b = new View("Button")
				SetRect(b, rand(0, GetWindowWidth()),
					rand(0, GetWindowHeight()), 30, 30)
				SetParent(b, GetParent(this))
				has_spawned = bool true
			}
			is_pressed = bool false
		}
	}
